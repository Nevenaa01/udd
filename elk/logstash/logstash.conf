input {
  file {
    path => "/usr/share/logstash/ingest_data/application.log"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_application"
  }
}


filter {
    grok {
        match => {
            "message" => 'Attacked Org: %{DATA:attacked_organization_name} where Security Org: %{DATA:security_organization_name} with Member of incident response team: %{DATA:full_name} and severity: %{DATA:incident_severity}, on location: %{NUMBER:lat},%{NUMBER:lon}, id in database: %{NUMBER:database_id:int}'
        }
    }
    if "_grokparsefailure" in [tags] {
        drop { }
    }
}

output{
    #data is sent to elasticsearch as output
    elasticsearch{
        hosts => ["http://elasticsearch:9200"]
        user => "ml_user"
        password => "NewStrongPassword123"
        index => "security_incident_index"
    }
    stdout{
        codec => rubydebug
    }
}